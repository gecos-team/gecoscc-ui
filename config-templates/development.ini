[app:gecoscc]
use = egg:gecoscc

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = en
pyramid.locales = ["en", "es"]

pyramid.includes = pyramid_debugtoolbar

jinja2.directories = gecoscc:templates
jinja2.filters =
    admin_jsonify = gecoscc.filters.admin_serialize
    datetime = gecoscc.filters.datetime
    regex_match = gecoscc.filters.regex_match

mongo_uri = mongodb://localhost:27017/gecoscc


# Pyramid - Beaker sessions configuration
# See: http://beaker.readthedocs.io/en/latest/configuration.html#session-options
## Session expires on closing the browser
beaker.session.cookie_expires = true
## Session expires after 20 minutes without accesing (20 minutes = 1200 seconds)
beaker.session.timeout=1200
beaker.session.save_accessed_time=true

session.type = ext:mongodb
session.url = mongodb://localhost:27017/gecoscc

session.key = session
session.secret = 12341234
session.cookie_on_exception = true

# Chef version number (in X.Y.Z format)
chef.version = 12.0.0
chef.url = https://192.168.11.226/chef/api/
chef.cookbook_name = gecos_ws_mgmt
chef.seconds_sleep_is_busy = 5
chef.seconds_block_is_busy = 3600

# smart_lock_sleep_factor is use to avoid concurrency problem
# We use this parameter to sleep the process between GET and POST request.
# Its a temporary solution
chef.smart_lock_sleep_factor = 3
# ssl_verify is used to avoid urllib3 ssl certificate validation
chef.ssl.verify = False


# CELERY (using redis backend) 
celery_broker_url = redis://localhost:6379/4

# SOCKETS (using redis backend)
sockjs_url = redis://localhost:6379/0

firstboot_api.version = 0.2.0
firstboot_api.organization_name = Organization name
firstboot_api.media = /opt/gecoscc/media/users
firstboot_api.gem_repo = http://rubygems.org

help_base_url = https://github.com/gecos-team/gecos-doc/wiki
help_policy_url = %(help_base_url)s/Politicas:

update_error_interval = 24

repositories = ["http://v2.gecos.guadalinex.org/gecos/", "http://v2.gecos.guadalinex.org/ubuntu/", "http://v2.gecos.guadalinex.org/mint/"]

printers.urls = ["http://www.openprinting.org/download/foomatic/foomatic-db-nonfree-current.tar.gz",
                "http://www.openprinting.org/download/foomatic/foomatic-db-current.tar.gz"]
                
mimetypes = [ "image/jpeg", "image/png" ]

# Debug mode timeout in hours
debug_mode_timeout = 24               
                
server_name = GECOS-PAU
server_ip = 192.168.11.238
server_address = 192.168.11.238

# This pattern must be http[s]://<user>:<password>@%s:<port>/RPC2
# Internally %s will be replaced by server IP
supervisord.url.pattern = http://internal:changeme@%s:9001/RPC2

# This pattern could be HTTP or HTTPS depending on your configuration
gecos.internal.url.pattern = http://%s/internal/server/%s

# Updates
# Add trailing slash when is a directory
updates.dir = /opt/gecoscc/updates/
updates.tmp = /tmp/
updates.log = %(updates.dir)s/{0}/update.log
updates.control = %(updates.dir)s/{0}/control
updates.scripts = %(updates.dir)s/{0}/scripts/
updates.cookbook = %(updates.dir)s/{0}/cookbook/
updates.backups = %(updates.dir)s/{0}/backups/
updates.rollback = %(updates.dir)s/{0}/rollback.log
updates.chef_backup = /opt/gecoscc/scripts/chef_backup.sh
updates.chef_restore = /opt/gecoscc/scripts/chef_restore.sh
config_uri  = %(here)s/gecoscc.ini

# Idle time (seconds)
# On maintenance mode, this parameter filters active users
idle_time = 900

# Help Channel
helpchannel.known_message = Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.

[pipeline:main]
pipeline =
    translogger
    gecoscc

[filter:translogger]
use = egg:Paste#translogger
setup_console_handler = False

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 6543
workers = 1
worker_class = gecoscc.socks.GecosGeventSocketIOWorker
timeout = 600

# Begin logging configuration

[loggers]
keys = root, gecoscc

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_gecoscc]
level = DEBUG
handlers =
qualname = gecoscc

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-8s [%(name)s][%(threadName)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S


# End logging configuration
